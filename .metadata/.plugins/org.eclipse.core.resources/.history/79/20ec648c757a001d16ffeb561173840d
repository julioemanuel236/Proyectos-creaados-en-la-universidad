package clases;
import java.util.ArrayList;

import javax.swing.JOptionPane;


import java.io.*;
public class Subdireccion implements Serializable{
	protected ArrayList<Medio> medios = new ArrayList<>();
	protected ArrayList<Edificio> edificios = new ArrayList<>();
	protected ArrayList<Becado> becados = new ArrayList<>();
	
	private String nombre;
	private String ubicacion;
	
	public Subdireccion(String nombre,String ubicacion) {
		this.nombre=nombre;
		this.ubicacion=ubicacion;
	}
	
	public void nuevoEdificio() {
		try {
			
			
			String nombre = Utiles.leer("Nombre");
			int    numero = Integer.parseInt(Utiles.leer("Numero"));
			
			Edificio e = new Edificio(nombre,numero);
			
			int capt = Integer.parseInt(Utiles.leer("Cantidad de apartamentos"));
			
			for(int i=0;i<capt;i++) {
				String    tipo = (String)Utiles.seleccion("Tipo de Apartamento",new String[]{"Profesores","Estudiantes","Inhabilitado"});
				String numeroa = Utiles.leer("Numero");
				String telefono = Utiles.leer("Telefono");
				int    capacidad = Integer.parseInt(Utiles.leer("Capacidad"));
				int    ocupado = 0;
				String    razon = "";
				if(tipo.equals("Inhabilitado")) {
					razon = Utiles.leer("Razon por la que está inhabilitado");
				}
				
				e.AddApartamento(new Apartamento(tipo,numeroa,""+numero,telefono,capacidad,ocupado,razon));	
			}
			edificios.add(e);
			guardar();
		}

		catch(Exception e) {
			JOptionPane.showMessageDialog(null, "ERROR EN LA INTRODUCCION DE DATOS");
		}
	}

	public void nuevoBecado() {
		try {
			String solapin = Utiles.leer("Solapin");
			String carnet = Utiles.leer("Carnet");
			String nombre = Utiles.leer("Nombre");
			String apellidos = Utiles.leer("Apellido");
			char   sexo = Utiles.leer("Sexo (M o F)").charAt(0);
			String provincia = Utiles.leer("Provincio");
			Edificio edificio = (Edificio)Utiles.seleccion("Edificio",edificios.toArray());
			Apartamento apartamento = (Apartamento) Utiles.seleccion("Solapin",edificio.getApartamentos().toArray());
			if(apartamento.isLleno()) {
				JOptionPane.showMessageDialog(null, "APARTAMENTO LLENO");
				return;
			}
			String correo = Utiles.leer("Correo");
			String ingreso = Utiles.leer("Fecha Ingreso");
			Becado b;
			String tipo = (String)Utiles.seleccion("Tipo",new String[]{"Estudiante","Profesor","Transitorio"});
			if(tipo.equals("Estudiante")) {
				String facultad = Utiles.leer("Facultad");
				int    anno = Integer.parseInt(Utiles.leer("Año"));
				String observacion = Utiles.leer("Observaciones");
				b = new Estudiante(solapin,carnet,nombre,apellidos,sexo,provincia,apartamento,correo,ingreso,facultad,anno,observacion); 
			}
			
			else if(tipo.equals("Profesor")) {
				String departamento = Utiles.leer("Departamento");
				
				String facultad  = Utiles.leer("Facultad");
				String asignatura = Utiles.leer("Asignatura");
				String categoriaD  = Utiles.leer("Categoria Docente");
				String categoriaC  = Utiles.leer("Categoria Cientifica");
				b = new Profesor(solapin,carnet,nombre,apellidos,sexo,provincia,apartamento,correo,ingreso,departamento,facultad,asignatura,categoriaD,categoriaC);
			}
			
			else {
				String empresa = Utiles.leer("Empresa");
				String motivo = Utiles.leer("Motivo");
				String trabajo = Utiles.leer("Trabajo");
				b = new Transitorio(solapin,carnet,nombre,apellidos,sexo,provincia,apartamento,correo,ingreso,empresa,motivo,trabajo);
			}
			apartamento.addBecado(b);
			becados.add(b);
			guardar();
		}
		catch(Exception e) {
			JOptionPane.showMessageDialog(null, "ERROR EN LA INTRODUCCION DE DATOS");
		}
	}
	
	public String datosEdificio() {
		Edificio e = (Edificio)Utiles.seleccion("Edificio", edificios.toArray());
		return e.datos();
	}
	
	public String datosBecadoCi() {
		String ci = Utiles.leer("Carnet a buscar");
		
		for(Becado b:becados) {
			if(b.getCarnet().equals(ci)) {
				return b.datos();
			}
		}
		return "Becado con Carnet "+ci+" no encontrado";
	}

	public String edificioMasBecados() {
		int cb=0;
		Edificio e=null;
		
		for(Edificio i:edificios) {
			if(i.cantidadBecados()>cb) {
				cb=i.cantidadBecados();
				e=i;
			}
		}
		if(e==null)return "No hay Edificios";
		return e.datos();
	}

	public String cantidadBecadosTipo() {
		int e=0,p=0,t=0;
		
		for(Becado i:becados) {
			if(i instanceof Estudiante)e++;
			if(i instanceof Profesor)p++;
			if(i instanceof Transitorio)t++;
		}
		
		return "Estudiantes: "+e+'\n'+"Profesores: "+p+'\n'+"Transitorios: "+t+'\n';
	}

	public String porcentajeOcupacionTotal() {
		int ocupado=0;
		int capacidad=0;
		for(Edificio i:edificios) {
			ocupado+=i.Ocupado();
			capacidad+=i.Capacidad();
		}
		return "El porcentaje de ocupacion general es de: "+(ocupado/capacidad)*100 +"%"; 
	}
	
	public String porcentajeOcupacionEdificio() {
		Edificio e = (Edificio)Utiles.seleccion("Edificio", edificios.toArray());
		if(e==null)return "No se ha seleccionado un edificio";
		return ((e.Ocupado()/e.Capacidad())*100)+"%";
	}

	public void guardar() {
		try {
			FileOutputStream fos = new FileOutputStream("Datos.dat");
			ObjectOutputStream oos = new ObjectOutputStream(fos);			
			oos.writeObject(edificios);
			oos.writeObject(becados);
			oos.close();
			fos.close();
		}
		catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	public void cargar() {
		try {
			FileInputStream fis = new FileInputStream("Datos.dat");
			ObjectInputStream ois = new ObjectInputStream(fis);
			edificios = (ArrayList<Edificio>) ois.readObject();
			becados = (ArrayList<Becado>) ois.readObject();
			ois.close();
			fis.close();
		}
		catch(Exception e) {
			e.printStackTrace();
		}
	}
}
