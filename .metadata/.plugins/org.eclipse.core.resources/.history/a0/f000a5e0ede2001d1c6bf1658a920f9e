package App;

import javax.swing.*;
import javax.swing.border.LineBorder;

import algoritmos.*;

import java.util.PriorityQueue;
import java.awt.Color;
import java.awt.Graphics;
import java.util.Collection;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
public class Ventana extends JFrame{

	PriorityQueue<Proceso> procesos = new PriorityQueue<>(new Comparator() {

		@Override
		public int compare(Object o1, Object o2) {
			Proceso p1 = (Proceso)o1;
			Proceso p2 = (Proceso)o2;
			if(p1.getInicio()<p2.getInicio())return -1;
			else if(p1.getInicio()>p2.getInicio())return 1;
			return 0;
		}
		
	});
	
	ScrollPanel zone;
	ScrollPanel table;
	AlgoritmoPlanificacion algoritmo;
	int tiempo;
	
	Ventana(){
		setLayout(null);
		setResizable(false);
		setSize(900,500);
		iniZone();
		iniTable();		
		iniButtons();
		setLocationRelativeTo(null);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		JPanel p = new JPanel();
		p.setSize(getSize());
		p.setBackground(Color.DARK_GRAY);
		add(p);
		setVisible(true);
	}
	
	private void iniButtons() {
		JComboBox<String> jcb = new JComboBox<>();
		jcb.setSize(150,50);
		jcb.setLocation(getWidth()-jcb.getWidth()-20,15);
		jcb.addItem("Prioridad Apropiativo");
		jcb.addItem("SJF");
		jcb.addItem("Round Robin");
		
		add(jcb);
	}
	
	private void iniTable() {
		table = new ScrollPanel(zone.getX(),getHeight()-55);
		table.border.color("all",Color.blue);
		table.back.setBackground(Color.darkGray);
		table.setLocation(0,20);
		String arr[]= {"ID","T","Ti","P"};
		for(int i=0;i<arr.length;i++) {
			JLabel jl = new JLabel(arr[i]);
			jl.setSize(table.getWidth()/4,20);			
			jl.setBorder(new LineBorder(Color.blue));
			jl.setLocation(0+(i*jl.getWidth()),0);
			jl.setHorizontalAlignment(JLabel.CENTER);
			jl.setForeground(Color.white);
			add(jl);
		}
		add(table);
	}
	
	private void iniZone() {
		zone= new ScrollPanel (getWidth()-200,getHeight()-115);	
		zone.border.color("all",Color.blue);
		zone.back.setBackground(Color.darkGray);		
		zone.hsb.inactive = Color.white;
		zone.setLocation(180,80);
		zone.setOpaque(true);
		zone.setBackground(Color.gray);
		add(zone);
					
	}
	
	void run() {
		
		for(int i=0;i<5;i++) {
			JLabel jl = new JLabel(""+i);
			jl.setSize(25,25);
			jl.setLocation(25+(i*jl.getWidth())+(i*5),0);
			jl.setForeground(Color.white);
			zone.back.setSize(Math.max(zone.back.getWidth(), i*25),zone.back.getHeight());
			zone.back.add(jl);
		}
		for(int i=0;i<procesos.size();i++) {
			JLabel jl = new JLabel();
			jl.setSize(25,25);
			jl.setText(""+i);
			jl.setLocation(5,25+(i*25));
			jl.setForeground(Color.white);
			zone.back.setSize(Math.max(zone.back.getWidth(), i*25),zone.back.getHeight());
			zone.back.add(jl);
		}
		
		(new Thread() {
			@Override
			public void run() {
				for(int i=0;i<tiempo;i++) {
					Proceso pro = algoritmo.procces();					
					JLabel jl = new JLabel();
					jl.setSize(25,25);
					jl.setLocation(25+(i*jl.getWidth())+(i*5),(pro.getId()*i+(i*5));
					jl.setForeground(Color.white);
					zone.back.setSize(Math.max(zone.back.getWidth(), i*25),zone.back.getHeight());
					zone.back.add(jl);
					while(!procesos.isEmpty() || procesos.peek().getInicio()==i) {
						
					}
				}
			}
		}).start();
		
	}
	
	public static void main(String args[]) {
		new Ventana();
	}
}
