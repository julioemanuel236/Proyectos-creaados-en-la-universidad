package game;

import java.util.ArrayList;
import java.util.Scanner;

import gui.SelectionPanel;
import unidades.*;

public class App {
	public static Scanner cin = new Scanner(System.in);
	public static Player player;
	public static final String ANSI_BLACK = "\u001B[30m";
	public static final String ANSI_RED = "\u001B[31m";
	public static final String ANSI_FULL_RED = "\033[0;41;31m";
	public static final String ANSI_GREEN = "\u001B[32m";
	public static final String ANSI_YELLOW = "\u001B[33m";
	public static final String ANSI_BLUE = "\u001B[34m";
	public static final String ANSI_PURPLE = "\u001B[35m";
	public static final String ANSI_CYAN = "\u001B[36m";
	public static final String ANSI_WHITE = "\u001B[37m";
	public static final String ANSI_RESET = "\u001B[0m";
	public static final String ANSI_BROWN = "\033[0;42;33m";
	public static final String ANSI_FULL_BLUE = "\033[0;44;34m";
	public static final String ANSI_ORANGE = "\033[0;41;33m";
    
	
	public static int seleccion(int n) {
		while(true) {
			try {
				int op=entero();
				if(op<0||op>n)throw new Exception();
				return op;
			}
			catch(Exception e) {
				print("Opcion no valida\n");
			}
		}
	}
	
	static public class Tienda{
		
		public static void abrir() {
			while(true) {
				String arr1[]= {"Comprar Heroe","Comprar Objeto","Atras"};				
				SelectionPanel<String> sp = new SelectionPanel(arr1) ;  
				print("Posees "+player.oro+" monedas de oro\n");
				print("1-Comprar Heroe\n");
				print("2-Comprar Objeto\n");
				print("0-Salir\n");
				String op=sp.select();				
					if(op.equals(arr1[0]))comprarHeroe();
					if(op.equals(arr1[1]))comprarItem();					
					if(op.equals(arr1[2]))return;
				}
			
		}
		
		static void comprarHeroe() {
			if(player.hComprar.isEmpty()) {
				print("Ya tienes todos los heroes\n");
				return;
			}
			if(player.oro<200) {
				print("No tienes suficiente oro para comprar un Heroe");
				return;
			}
			mostrarhComprar();
			print("Cada Hereo tiene un valor de 200 monedas de oro \n");
			int op=seleccion(player.hComprar.size());
			if(op==0)return;
			else {
				Heroe h = player.hComprar.get(op-1);
				player.heroes.add(h);
				player.hComprar.remove(h);
				print("Se ha comprado el heroe "+h.shopping()+"\n");
				player.oro-=200;
			}
		}
		
		static void comprarItem() {
			if(player.items.size()>=10) {
				print("No puedes llevar mas objetos");
				return;
			}
			mostrarItems();
			int op=seleccion(3);
			if(op==0)return;
			Item i=null;
			switch(op) {
				case 1:i = new SemillaVida();break;
				case 2:i = new ElixirVerde();break;
				case 3:i = new CapaMovilidad();break;
			}
			if(player.oro<i.precio) {
				print("No tienes suficiente oro");
				return;
			}
			player.items.add(i);
			player.oro-=player.items.get(player.items.size()-1).precio;
			print("Ha comprado con exito\n");
		}
		
		public static void mostrarItems() {
			print("1-Semilla de la vida\t50\nDescripcion: Resucita a un Heroe caido en batalla\n\n");
			print("2-Elixir Verde\t25\nDescripcion: Restaura 50 puntos de vida sobre quien se use\n\n");
			print("3-Capa de Movilidad\t75\nDescripcion: Te permite moverte una casilla\n\n");
			print("0-Salir\n");
		}
		
		public static void mostrarhComprar() {
			for(int i=0;i<player.hComprar.size();i++) {
				print((i+1)+"-"+player.hComprar.get(i).shopping()+"\n");
			}
			print("0-Salir\n");
		}
		
	}
	
	public App() {		
		mainMenu();
	}
	
	
	
	public void mainMenu() {
		while(true) {
			print("1-Jugar\n");
			print("2-Inventario\n");
			print("3-Tienda\n");
			print("4-Mejoras\n");
			print("5-Generar Mapa\n");
			print("0-Salir\n");
			int op=seleccion(5);
			switch(op) {
				case 1:iniciarPartida();break;
				case 2:inventario();
				case 3:Tienda.abrir();break;
				case 4:mejoras();break;
				case 5:demoTablero();break;
				case 0:print(ANSI_CYAN+"GRACIAS POR JUGAR\n"+ANSI_RESET);return;
			}
		}
	}

	public void demoTablero() {
		seleccionarMapa();
		player.tablero.generarMounstros();
		player.tablero.ver();
		
	}
	
	public static void showHeroes() {
		for(Heroe i:player.heroes) {
			print(i.info());
		}
	}
	
	public static void showItems() {
		for(int i=0;i<player.items.size();i++) {
			print((i+1)+"-"+player.items.get(i).nombre+"\n");
		}
		print("0-Salir\n");
	}
	
	public void inventario() {
		if(player.heroes.isEmpty()) 
			print("No posees Heroes\n");
		else showHeroes(); 
		if(player.items.isEmpty())
			print("No posees Items\n");
		else showItems();
		if(player.items.isEmpty())return;
		print("Seleccione un objeto para venderlo o usarlo\n");
		int op=seleccion(player.items.size());
		if(op==0)return;
		hacerCon(player.items.get(op-1));
	}
	
	public void hacerCon(Item i) {
		
		print(i.nombre+"\n");
		print("1-Usar\n");
		print("2-Vender\n");
		print("0-Salir\n");
		int op=seleccion(2);
		if(op==0)return;
		else if(op==1) {
			usarItem(i);
		}
		else {
			player.oro+=i.precio/2;
			player.items.remove(i);
			print("Objeto vendido por "+i.precio/2+" monedas de oro\n");
		}
		
	}
	
	public void usarItem(Item i) {
		for(int j=0;j<player.heroes.size();j++) {
			print((j+1)+"-"+player.heroes.get(j).all()+"\n");
		}
		print("0-Salir\n");
		int op=seleccion(player.heroes.size());
		if(op==0)return;
		i.usar(player.heroes.get(op-1));
		player.items.remove(i);
	}
	
	public void iniciarPartida() {		
		while(player.heroes.isEmpty()) {//primera vez que se juega
			print("Para iniciar tu aventura obten un Heroe y algunos objetos\n");
			Tienda.abrir();
		}
		print("Ahora selecciona un tipo de mapa\n");
		seleccionarMapa();
		if(player.tablero==null)return;
		seleccionHeroes();
		if(player.ingame[0]==null)return;
		print("Todo listo, empezamos\n");
		print("Seleccione unas coordenadas para posicionar el heroe\n");
		print("0-Salir\n");
		print("X: ");
		int X=seleccion(player.tablero.width);
		print("Y: ");
		int Y=seleccion(player.tablero.height);
		if(X<1||Y<1||X>=player.tablero.width||Y>=player.tablero.height) {
			print("Estas posiciones son invaliads\n");
			return;
		}/*
		if(tablero.map[Y-1][X-1] instanceof Mob) {
			Mob b = (Mob)tablero.map[Y-1][X-1];
			Random rand = new Random();
			int rx=X-1;
			int ry=Y-1;	
			while((rx==X-1&&ry==Y-1)||tablero.map[ry][rx] instanceof Mob) {
				rx = rand.nextInt(tablero.width);
				ry = rand.nextInt(tablero.height);
			};
			b.x=rx;
			b.y=ry;
			tablero.map[ry][rx]=b;
			
		}*/
		player.ingame[0].x=X-1;
		player.ingame[0].y=Y-1;
		player.tablero.map[Y-1][X-1]=player.ingame[0];
		player.tablero.generarMounstros();
		gameStart();
	}
	
	public static void mostrarItems() {
		for(int i=0;i<player.items.size();i++) {
			print((i+1)+"-"+player.items.get(i).info()+"\n");
		}
		print("0-No\n");
	}
	
	public static void mejorarVida() {
		if(player.oro<80) {
			print("No tienes oro para esto\n");
		}
		if(player.heroes.isEmpty()) {
			print("No tienes ningun heroe\n");
			return;
		}
		for(int i=0;i<player.heroes.size();i++) {
			print((i+1)+"-"+player.heroes.get(i).info()+"\n");
		}
		print("0-Salir\n");
		int op=seleccion(player.heroes.size());
		if(op==0)return;
		player.heroes.get(op-1).vidaMaxima+=50;
		if(!player.heroes.get(op-1).isDead())player.heroes.get(op-1).vida+=50;
		player.oro-=80;
	}

	public static void mejorarDamage() {
		if(player.oro<125) {
			print("No tienes oro para esto\n");
		}
		if(player.heroes.isEmpty()) {
			print("No tienes ningun heroe\n");
			return;
		}
		for(int i=0;i<player.heroes.size();i++) {
			print((i+1)+"-"+player.heroes.get(i).info()+"\n");
		}
		print("0-Salir\n");
		int op=seleccion(player.heroes.size());
		if(op==0)return;
		player.heroes.get(op-1).damage+=10;
		player.oro-=125;
	}
	
	public static void mejorarMovilidad() {
		if(player.oro<500) {
			print("No tienes oro para esto\n");
		}
		if(player.heroes.isEmpty()) {
			print("No tienes ningun heroe\n");
			return;
		}
		for(int i=0;i<player.heroes.size();i++) {
			print((i+1)+"-"+player.heroes.get(i).info()+"\n");
		}
		print("0-Salir\n");
		int op=seleccion(player.heroes.size());
		if(op==0)return;
		player.heroes.get(op-1).maxMov++;
		player.oro-=500;
	}
	
	public static void mejoras() {
		if(player.oro<80) {
			print("No tienes dinero para ninguna mejora\n");
			return;
		}
		print("Posees "+player.oro+" monedas de oro\n");
		print("1-Vida\t80\nDescripcion: Le otorga al personaje 50 de vida maxima\n\n");
		print("2-Dano\t125\nDescripcion: Le otorga al personaje 10 de ataque\n\n");
		print("3-Movilidad\t500\nDescripcion: Le otorga al personaje 1 casilla adicional de movimiento\n\n");
		print("0-Salir\n");
		int op=seleccion(3);
		switch(op) {
			case 1:mejorarVida();break;
			case 2:mejorarDamage();break;
			case 3:mejorarMovilidad();break;
			case 0:return;
		}
	}
	
	public static void gameStart() {
		int turno=0;
		while(true) {
			player.infoTurno="Descripcion del turno:\n";
			print("TURNO: "+ turno +"\n");
			Heroe hero = player.ingame[player.mainHero];
			//Si el heroe en batalla murio cambiarlo
			boolean murio=false;
			if(hero.isDead()) {
				murio=true;
				int other = (player.mainHero+1)%2;
				Heroe second = player.ingame[other];
				if(second==null||second.isDead()) {
					loss();
					return;					
				}
				else {					
					cambiarHeroe();
					print("Tu heroe a muerto, se a cambiado a tu otro jugador\n");
					int X=0,Y=0;
					while(true) {
						print("X: ");
						X=seleccion(player.tablero.width);
						print("Y: ");
						Y=seleccion(player.tablero.height);
						if(X<1||Y<1) {
							print("Estas posiciones son invaliads\nPara la proxima use posiciones a partir de 1 y menores que el tamanno del mapa");
						}
						else break;
					}
					((Entity)player.tablero.map[player.ingame[player.mainHero].y][player.ingame[player.mainHero].x]).restaureMap();
					player.tablero.map[Y-1][X-1]=player.ingame[player.mainHero];
					player.ingame[player.mainHero].x=X-1;
					player.ingame[player.mainHero].y=Y-1;
				}
			}
			if(turno>0&&canChange()){
				print("Deseas Cambiar el Heroe\n1-Si\n2-NO\n");
				int op=seleccion(2);
				if(op==1)cambiarHeroe();
			}
			hero = player.ingame[player.mainHero];
			if(!player.items.isEmpty()&&turno>0) {
				print("Deseas usar algun objeto\n");
				mostrarItems();
				int op=seleccion(player.items.size());
				if(op==0);
				else {
					Item item = player.items.get(op-1);
					if(item instanceof SemillaVida) {
						Heroe hero2 = player.ingame[(player.mainHero+1)%2];
						if(hero2!=null)item.usar(hero2);
					}
					else item.usar(hero);
					
					player.items.remove(item);
				}
			}
			if(player.ingame[0].isDead()&&player.ingame[1].isDead()) {
				loss();
				return;
			}
			//hero.restarMove();
			print(hero.all()+"\n");
			player.tablero.ver();
			print("1-Atacar\n");
			print("2-Moverse\n");
			print("3-Tienda\n");
			print("4-Mejoras\n");
			print("0-Terminar\n");
			int op=seleccion(4);
			switch(op) {
				case 1:hero.atacar();break;
				case 2:hero.mover();break;
				case 3:Tienda.abrir();break;
				case 4:mejoras();break;
				case 0:if(abandonar())return;
			}
			
			for(int i=0;i<player.enemy.size();i++) {			
				if(!player.enemy.get(i).atacar())player.enemy.get(i).mover();	
			}
			
			print(player.infoTurno+"\n");
			if(player.enemy.isEmpty()) {
				win();
				return;
			}
			turno++;
		}
	}
	
	public static boolean abandonar() {
		print("Seguro que deseas"+ANSI_RED+" abandonar"+ANSI_RESET+" esta partida, tu progreso"+ANSI_RED+" no sera guardado\n"+ANSI_RESET);
		print("1-SI\n");
		print("0-NO\n");
		int op=seleccion(1);
		if(op==1)return true;
		return false;
	}

	public static boolean canChange() {
		int other = (player.mainHero+1)%2;
		if(player.ingame[other]==null) {
			return false;
		}
		if(player.ingame[other].isDead()) {
			for(int i=0;i<player.items.size();i++) {
				Item item=player.items.get(i);
				if(item instanceof SemillaVida) {
					return true;
				}
			}
			return false;
		}
		return true;
	}
	
	public static void loss() {
		System.out.println(App.ANSI_RED+"__________________________"+App.ANSI_RESET);
		System.out.println(App.ANSI_RED+"\\Has perdido esta partida/"+App.ANSI_RESET);
		System.out.println(App.ANSI_RED+" \\______________________/"+App.ANSI_RESET);
	}
	
	public static void win() {
		player.oro+=250;
		System.out.println(App.ANSI_GREEN+"_________________________"+App.ANSI_RESET);
		System.out.println(App.ANSI_GREEN+"\\Has GANADO esta partida/"+App.ANSI_RESET);
		System.out.println(App.ANSI_GREEN+" \\_____________________/"+App.ANSI_RESET);
	}
	
	public static boolean cambiarHeroe() {
		int other = (player.mainHero+1)%2;		
		if(player.ingame[other]==null) {
			print("No tienes otro heroe");
			return false;
		}
		if(player.ingame[other].isDead()) {
			boolean semilla=false;
			for(int i=0;i<player.items.size();i++) {
				Item item=player.items.get(i);
				if(item instanceof SemillaVida) {
					semilla=true;
					item.usar(player.ingame[other]);
					player.items.remove(item);
					//mainHero=other;
					break;
				}
			}
			if(!semilla) {
				print("No se puede revivir al heroe\n");
				return true;
			}
			else {
				print("Se uso una semilla vida para revivir al heroe\n");
				return true;
			}
		}
		Heroe heroe = player.ingame[other];
		heroe.overAgua=player.ingame[player.mainHero].overAgua;
		heroe.overLava=player.ingame[player.mainHero].overLava;
		heroe.overArbol=player.ingame[player.mainHero].overArbol;
		heroe.x=player.ingame[player.mainHero].x;
		heroe.y=player.ingame[player.mainHero].y;
		player.tablero.map[heroe.y][heroe.x]=heroe;
		player.mainHero=other;
		return true;
		
		
	}
	
	public static void seleccionarMapa() {
		print("1-Normal 8*8\n");
		print("2-Dificl 15*15\n");
		print("3-Personalizado\n");
		print("0-Salir\n");
		int op = seleccion(3);
		switch(op) {
			case 1:player.tablero = new Tablero(1);break;
			case 2:player.tablero = new Tablero(2);break;
			case 3:tableroPersonalizado();break;
			case 0:player.tablero=null; break;
		}
	}
	
	public static void seleccionHeroes() {
		player.ingame[0]=null;
		player.ingame[1]=null;
		print("Ahora selecciona a tu heroe principal\n");
		for(int i=0;i<player.heroes.size();i++) {
			print((i+1)+"-"+player.heroes.get(i).shopping()+"\n");
		}
		print("0-Salir\n");
		int op=seleccion(player.heroes.size());
		if(op==0) return;
		player.ingame[0]=player.heroes.get(op-1);
		if(player.heroes.size()>1) {
			ArrayList<Heroe> temp = new ArrayList<>(player.heroes);
			temp.remove(player.ingame[0]);
			print("Ahora selecciona a tu heroe secundario\n");
			for(int i=0;i<temp.size();i++) {
				print((i+1)+"-"+temp.get(i).shopping()+"\n");
			}
			print("0-Salir\n");
			op=seleccion(temp.size());
			if(op==0) return;
			player.ingame[1]=temp.get(op-1);
		}
	}

	public static int entero() {
		while(true) {
			try {
				int n=Integer.parseInt(cin.next());
				return n;
			}
			catch(Exception e) {
				print("Opcion no valida\n");
			}
		}
	}
 
	public static void print(String txt) {
		System.out.print(txt);
	}
	
	public static void tableroPersonalizado() {
		System.out.println("Systema de personalizacion de tableros\n");
		String ops[]= {"Alto","Ancho","Porcentaje Planicies","Porcentaje Arboles","Porcentaje Agua","Porcentaje Lava"};
		int n[]= new int[ops.length];
		for(int i=0;i<ops.length;i++) {
			n[i]=0;
			while(n[i]<1) {
				print(ops[i]);
				n[i]=seleccion(20);
				if(n[i]==0)print("valores mayores que 0\n");
			}
			
			if(n[i]<0)return;
		}
		
		player.tablero = new Tablero(n[0],n[1],n[2],n[3],n[4],n[5]);	
	}
	
	public static void main(String args[]) {	    
		new App();
		System.exit(0);
	}

}
