package game;

import java.util.Scanner;
import java.util.ArrayList;
public class Arquero extends Heroe {

	public Arquero(Tablero t) {
		super(150, 1, 100,1,t);
		// TODO Auto-generated constructor stub
	}

	@Override
	public void atacar() {
		int arr[]= {0,2,4,6};
		ArrayList<Entity> attack = new ArrayList<>();
		
		for(int i=0;i<4;i++) {
			for(int j=1;j<3;j++) {
				int ax=x+(dx[i]*j);
				int ay=y+(dy[i]*j);
				if(ax<1||ax>tablero.width||ay<1||ay>tablero.height)continue;
				else if(tablero.map[ax][ay] instanceof Entity) {
					attack.add(tablero.map[ax][ay]);
				}
			}
		}
		for(int i=0;i<attack.size();i++) {
			System.out.println(i+" "+attack.get(i).info());
		}
		Scanner cin = new Scanner(System.in);
		int a=cin.nextInt();
		
		try {
			this.hit(attack.get(a));
		}
		catch(Exception e) {
			System.out.println("Seleccion invalida\n");
			goto again
		}
		
	}

	@Override
	public void die() {
		// TODO Auto-generated method stub

	}

	@Override
	public boolean mover() {
		int dir=0;
		Scanner cin = new Scanner(System.in);
		if(movimientos<1) {
			System.out.println("No te quedan movimientos en este turno\n");
			return false;
		}
		
		System.out.println("En que direccion deseas moverte\nU-arriba\nR-derecha\nD-abajo\nL-izquierda");
		char c=cin.next().charAt(0);
		
		switch(c) {
		 case 'U':dir=6;break;
		 case 'R':dir=0; break;
		 case 'D':dir=2; break;
		 case 'L':dir=4; break;
		}
		for(int i=0;i<3;i++) {
			if(movimientos<1)return false;
			int x=getX()+dx[dir];
			int y=getY()+dy[dir];
			
			if(x<1||x>tablero.width||y<1||y>tablero.height||tablero.map[x][y]!=null)return false;
			moveTo(x,y);		
		}
		return true;
	}

}
