// Lecture #17 - Object Oriented Programming 03/29/2023
// In class live demo for Inheritance
// 16/19 students in attendance, Instrutor: Dr. Charles Thangaraj
// Post lecture comment: 

// Lecture #18 - Object Oriented Programming 04/03/2023
// In class live demo for Inheritance
// 13/19 students in attendance, Instrutor: Dr. Charles Thangaraj
// Post lecture comment: 

package tareas;


import java.util.*;
import java.math.*;
import java.io.*;
import java.lang.*;

// Inherited/sub/child class from the Base class
// Base/super/parent/root class: MountainBike
// Inherited class: EBike
// This is an example for multi-level inheritance 
// I.e. a 1st level inherited class becomes the base class for a 2nd level inhertied class
 
class EBike extends MountainBike
{
	// There are properties and methods that are specific to the MountainBike 
	// class. There are in addition to the inherited ones from the base class (BasicBike). 
	
	// public variables
	public int rangeMiles; // Range in miles
	public String batteryType; // Li-ion, NiMH, SLA, AGM, LiPo
	public int batterySize; // A-hours
	public int batteryVolt; // 12/24/36/48 
	public double motorPower; // in KW 0.5. 1.0 etc
	
	// protected variable
	
	// private variables
	
	// Constructors  - only one is used here - you can have multiple 
	// constructors if you want to
	
	EBike(int RM, String BTy, int BSz, int BVt, double MP, int SH, boolean FS, boolean FPT, int S, int G, String C, String SF)
	{
		super(SH, FS, FPT, S, G, C, SF);
				
		this.rangeMiles = RM;
		this.batteryType = BTy;
		this.batterySize = BSz;
		this.batteryVolt = BVt;
		this.motorPower = MP;		
		
	}
	
		
	// Methods 
	
	public String getBatteryInfo()
	{
		String msg = "";
		msg = "Battery Type: " + this.batteryType + " | Battery Size: " + this.batterySize + " | Battery Voltage: " + this.batteryVolt;
		return msg;
	}
	
	
	// getters and setters
	
	// Getters and Setters for public variable are not needed as they can be 
	// accessed freely by others.
	
	// behavior methods
	
	// Polymorphism (run time) - this inherited class method OVERRIDES 
	// the base class method
	
	public String getInfo()
	{
		String msg;
		msg = "Bike Info 1/4: {Max speed setting: " + maxSpeed + " | No of gears: " + noOfGears + " | Frame color: " + paintColor + " | Safety features: " + safetyFeatures + "}\n";
		msg = msg + "Bike Info 2/4: {Seat Height: " + seatHeight + " | Full Suspension " + fullSuspension + " | Flat Proof Tyres " + flatProofTyres + " }\n";
		msg = msg + "Bike Info 3/4: {" + getBatteryInfo() + " }\n";
		msg = msg + "Bike Info 3/4: {Range in Miles: " + rangeMiles + " | Motor Power: " + motorPower + " }\n";
		
		return msg;
		
	}

} // End class EBike
