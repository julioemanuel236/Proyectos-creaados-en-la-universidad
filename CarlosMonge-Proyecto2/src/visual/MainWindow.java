package visual;
import control.Datos;
import entidades.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Date;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    Datos datos;
    DefaultTableModel model;
    JPopupMenu popupMenuTransporte;
    JPopupMenu popupMenuAlquiler;
    boolean bicicletas = true,scooters = true,patinetes = true;
    long tiempoMinimo = 0, tiempoMaximo = System.currentTimeMillis();
    boolean filtrado = false;
    
    public MainWindow(Datos datos) {        
        this.datos = datos;
        initComponents();       
        initPopupMenuTransporte();        
        setLocationRelativeTo(null);
        updateTransporteTable();
        updateAlquilerTable();
        
    }

    
    private void initPopupMenuTransporte(){
        /*
            iniciamos y creamos el popup de la tabla de transporte
            que tendra las opciones de editar y eliminar
            en las acciones comprobamos que haya un indice
            seleccionado y que este dentro del rango de la cantidad
            de transportes que tenemos
        */
        this.popupMenuTransporte = new JPopupMenu();
        JMenuItem menuItemEditar = new JMenuItem("Editar");
        JMenuItem menuItemEliminar = new JMenuItem("Eliminar");
        
        menuItemEditar.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                int index = tablaTransportes.getSelectedRow();            
                if(index == -1 || index >= datos.getTransporte().size())return;
                new EditarTransporteWindow(datos,datos.getTransporte().get(index),MainWindow.this).setVisible(true);
            }
        
        });
        
        menuItemEliminar.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
               int[] filas = tablaTransportes.getSelectedRows();               
               datos.eliminarTransporte(filas);               
               updateTransporteTable();
            }
               
        });
        popupMenuTransporte.add(menuItemEditar);
        popupMenuTransporte.add(menuItemEliminar);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaTransportes = new javax.swing.JTable();
        agregarTransporte = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tablaAlquileres = new javax.swing.JTable();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        fechaMinima = new javax.swing.JSpinner();
        fechaMaxima = new javax.swing.JSpinner();
        agregarAlquiler1 = new javax.swing.JButton();
        jToggleButton4 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);
        setSize(new java.awt.Dimension(0, 0));

        jPanel1.setBackground(new java.awt.Color(102, 102, 100));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TRANSPORTES");

        jScrollPane1.setBackground(new java.awt.Color(62, 68, 68));
        jScrollPane1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));

        tablaTransportes.setBackground(new java.awt.Color(75, 75, 75));
        tablaTransportes.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tablaTransportes.setForeground(new java.awt.Color(255, 255, 255));
        tablaTransportes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Categoria", "Codigo", "Tipo", "Info"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaTransportes.setFocusable(false);
        tablaTransportes.setGridColor(new java.awt.Color(90, 94, 95));
        tablaTransportes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaTransportesMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tablaTransportesMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tablaTransportes);

        agregarTransporte.setBackground(new java.awt.Color(78, 81, 82));
        agregarTransporte.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        agregarTransporte.setForeground(new java.awt.Color(255, 255, 255));
        agregarTransporte.setText("AGREGAR");
        agregarTransporte.setFocusable(false);
        agregarTransporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarTransporteActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("ALQUILERES");

        jScrollPane6.setBackground(new java.awt.Color(62, 67, 68));
        jScrollPane6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane6.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane6.setOpaque(false);

        tablaAlquileres.setBackground(new java.awt.Color(75, 75, 75));
        tablaAlquileres.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tablaAlquileres.setForeground(new java.awt.Color(255, 255, 255));
        tablaAlquileres.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Cliente", "ID Cliente", "Codigo Transporte", "Tipo", "Monto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaAlquileres.setFocusable(false);
        tablaAlquileres.setGridColor(new java.awt.Color(255, 255, 255));
        tablaAlquileres.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaAlquileresMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tablaAlquileresMouseReleased(evt);
            }
        });
        jScrollPane6.setViewportView(tablaAlquileres);

        jToggleButton1.setBackground(new java.awt.Color(78, 82, 82));
        jToggleButton1.setSelected(true);
        jToggleButton1.setText("BICICLETA");
        jToggleButton1.setFocusable(false);
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jToggleButton2.setBackground(new java.awt.Color(78, 82, 82));
        jToggleButton2.setSelected(true);
        jToggleButton2.setText("SCOOTER");
        jToggleButton2.setFocusable(false);
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        jToggleButton3.setBackground(new java.awt.Color(78, 82, 82));
        jToggleButton3.setSelected(true);
        jToggleButton3.setText("PATINETE");
        jToggleButton3.setFocusable(false);
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });

        fechaMinima.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        fechaMinima.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(1262383200000L), new java.util.Date(-62166535200000L), new java.util.Date(), java.util.Calendar.DAY_OF_MONTH));
        fechaMinima.setToolTipText("");
        fechaMinima.setEditor(new javax.swing.JSpinner.DateEditor(fechaMinima, "dd/MM/yyyy"));
        fechaMinima.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                fechaMinimaStateChanged(evt);
            }
        });

        fechaMaxima.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        fechaMaxima.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), new java.util.Date(946762920000L), new java.util.Date(), java.util.Calendar.DAY_OF_MONTH));
        fechaMaxima.setEditor(new javax.swing.JSpinner.DateEditor(fechaMaxima, "dd/MM/yyyy"));
        fechaMaxima.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                fechaMaximaStateChanged(evt);
            }
        });

        agregarAlquiler1.setBackground(new java.awt.Color(78, 81, 82));
        agregarAlquiler1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        agregarAlquiler1.setForeground(new java.awt.Color(255, 255, 255));
        agregarAlquiler1.setText("AGREGAR");
        agregarAlquiler1.setFocusable(false);
        agregarAlquiler1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                agregarAlquiler1MouseEntered(evt);
            }
        });
        agregarAlquiler1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarAlquiler1ActionPerformed(evt);
            }
        });

        jToggleButton4.setBackground(new java.awt.Color(78, 82, 82));
        jToggleButton4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jToggleButton4.setForeground(new java.awt.Color(255, 255, 255));
        jToggleButton4.setText("FILTRAR");
        jToggleButton4.setFocusable(false);
        jToggleButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(fechaMinima, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fechaMaxima, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jToggleButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(agregarAlquiler1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane6)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                                .addComponent(jToggleButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jToggleButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jToggleButton2))
                            .addGap(5, 5, 5)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(fechaMaxima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(fechaMinima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jToggleButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(agregarAlquiler1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(agregarTransporte, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(agregarTransporte, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void updateTransporteTable(){
        /*
            para actualizar la tabla de transporte
            creamos un modelo con la informacion necesaria
            y hacemos que las casillas no sean editables
            luego recorremos el transporte
            y agregamos la informacion
            finalmente rellenamos hasta 40 posiciones en caso de no
            tener suficientes transportes
        */
        model = new DefaultTableModel(new String[]{"Categoria", "Codigo", "Tipo","Info"}, 0){
            @Override
            public boolean isCellEditable(int row,int col){
                
                return false;
            }
        };
        
        for (Transporte t: datos.getTransporte()){
            String[] data = t.getInfo().split(datos.SEPARADOR);
            model.addRow(data);
        }
        
        Object[] data = new Object[]{"","","",""};
        
        for(int i = datos.getTransporte().size(); i < 40;i++)
            model.addRow(data);
       
        tablaTransportes.setModel(model);
    }
    
    public void updateAlquilerTable(){
        /*
            creamos el modelo de datos que debemos motrar
            y hacemos no editables las celdas
            recorremos las facturas y agregamos la informacion
            para ello primero verificamos si se esta aplicando
            algun filtro, en caso de hacerlo verficar que 
            la factura pase el filtro para agregarla
            finalmente rellenar hasta 40 lugares la tabla
        */
        model = new DefaultTableModel(new String[]{"ID", "Cliente", "ID Cliente","Codigo Transporte","Tipo","Monto"}, 0){
            @Override
            public boolean isCellEditable(int row,int col){
                
                return false;
            }
        };
        
        for (Factura f: datos.getFacturas()){
            String[] data = f.getTableInfo().split(datos.SEPARADOR);            
            if(filtrado){
                            
                if(((f.getCategoria().equals(Bicicleta.class.getSimpleName()) && this.bicicletas)||
                   (f.getCategoria().equals(Scooter.class.getSimpleName()) && this.scooters)||
                   (f.getCategoria().equals(Patinete.class.getSimpleName()) && this.patinetes)) && 
                   (f.getFecha().getTime()>=tiempoMinimo && f.getFecha().getTime()<=tiempoMaximo))
                        model.addRow(data);
            }
            else model.addRow(data);
        }
        
        Object[] data = new Object[]{"","","","","",""};
        
        for(int i = datos.getFacturas().size(); i < 40;i++)
            model.addRow(data);
       
        tablaAlquileres.setModel(model);
    }
    
    private void agregarTransporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarTransporteActionPerformed
        //crear una pestaña de nuevo transporte
        new NuevoTransporteWindow(datos,this).setVisible(true);
    }//GEN-LAST:event_agregarTransporteActionPerformed

    private void tablaTransportesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaTransportesMouseClicked
        //dar doble click en un transporte permite editarlo
        if (evt.getClickCount() == 2) {                
            int filaSeleccionada = tablaTransportes.getSelectedRow();                
            if(filaSeleccionada == -1 || filaSeleccionada>=datos.getTransporte().size())return;
            new EditarTransporteWindow(datos, datos.getTransporte().get(filaSeleccionada), this).setVisible(true);
        }
    }//GEN-LAST:event_tablaTransportesMouseClicked

    private void tablaTransportesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaTransportesMouseReleased
        // Mostrar el menú de clic derecho si se hace clic con el botón derecho
        if (evt.isPopupTrigger()) {
            popupMenuTransporte.show(evt.getComponent(), evt.getX(), evt.getY());
        }
        
    }//GEN-LAST:event_tablaTransportesMouseReleased

    private void tablaAlquileresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaAlquileresMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaAlquileresMouseClicked

    private void tablaAlquileresMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaAlquileresMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaAlquileresMouseReleased

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        //activar o desactivar filtro de bicicletas
        this.bicicletas = jToggleButton1.isSelected();
        if(this.filtrado)
            updateAlquilerTable();
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        //activar o desactivar filtro de scooters
        this.scooters = jToggleButton1.isSelected();
        if(this.filtrado)
            updateAlquilerTable();
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        //activar o desactivar filtro de patinetes
        this.patinetes = jToggleButton1.isSelected();
        if(this.filtrado)
            updateAlquilerTable();
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void fechaMinimaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_fechaMinimaStateChanged
        //obtener el tiempo del inicio del dia minimo
        Date fecha = (Date)fechaMinima.getValue();
        fecha.setHours(0);
        fecha.setMinutes(0);
        fecha.setSeconds(0);
        
        tiempoMinimo = fecha.getTime();
        System.out.println(tiempoMinimo);
        if(this.filtrado)
            updateAlquilerTable();
    }//GEN-LAST:event_fechaMinimaStateChanged

    private void fechaMaximaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_fechaMaximaStateChanged
        //obtener el final del dia maximo
        Date fecha = (Date)fechaMaxima.getValue();
        fecha.setHours(23);
        fecha.setMinutes(59);
        fecha.setSeconds(59);        
        
        tiempoMaximo = fecha.getTime();
        System.out.println(tiempoMaximo);
        if(this.filtrado)
            updateAlquilerTable();
    }//GEN-LAST:event_fechaMaximaStateChanged

    private void agregarAlquiler1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agregarAlquiler1MouseEntered
        //para permitir o no agregar una factura debe existir un transporte
        //al menos en los datos
        //entonces habilitamos el boton segun este vacia o no
        //la lista de transportes
        //como no se puede ir al boton que no sea con el mouse es efectivo
        agregarAlquiler1.setEnabled(!datos.getTransporte().isEmpty());
    }//GEN-LAST:event_agregarAlquiler1MouseEntered

    private void agregarAlquiler1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarAlquiler1ActionPerformed
        //mostrar ventana de nueva factura
        new NuevoAlquilerWindow(datos, this).setVisible(true);
    }//GEN-LAST:event_agregarAlquiler1ActionPerformed

    private void jToggleButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton4ActionPerformed
        //activar o desactivar el filtrado
        filtrado = jToggleButton4.isSelected();
        updateAlquilerTable();
    }//GEN-LAST:event_jToggleButton4ActionPerformed

    /**
     * @param args the command line arguments
     */    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarAlquiler1;
    private javax.swing.JButton agregarTransporte;
    private javax.swing.JSpinner fechaMaxima;
    private javax.swing.JSpinner fechaMinima;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JTable tablaAlquileres;
    private javax.swing.JTable tablaTransportes;
    // End of variables declaration//GEN-END:variables
}
