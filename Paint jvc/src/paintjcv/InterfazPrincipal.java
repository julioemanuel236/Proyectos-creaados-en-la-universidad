/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paintjcv;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import javax.imageio.ImageIO;

/**
 *
 * @author Juan Carlos Valencia
 */
public class InterfazPrincipal extends javax.swing.JFrame {

    private Dibujar canvas1;
    private GuardarAbrir guardar_abrir;

    /**
     * Creates new form frmPrincipal
     */
    public InterfazPrincipal() {
        super("MiniPaint JCV 1.0");
        guardar_abrir = new GuardarAbrir();
        initComponents();

        this.setSize(655, 525);
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        this.setResizable(false);

        implementar_canvas();
    }

    private void implementar_canvas() {
        canvas1 = new Dibujar();
        canvas1.setBounds(20, 20, 600, 420);
        canvas1.addMouseMotionListener(new java.awt.event.MouseMotionListener() {
            @Override
            public void mouseDragged(MouseEvent me) {
                canvas1.mouseDragged(me);
            }

            @Override
            public void mouseMoved(MouseEvent me) {
            }
        });

        canvas1.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent me) {
            }

            @Override
            public void mousePressed(MouseEvent me) {
                canvas1.mousePressed(me);
            }

            @Override
            public void mouseReleased(MouseEvent me) {
                canvas1.mouseReleased(me);
            }

            @Override
            public void mouseEntered(MouseEvent me) {
            }

            @Override
            public void mouseExited(MouseEvent me) {
            }
        });
        this.add(canvas1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        BarraMenu = new javax.swing.JMenuBar();
        MenuArchivo = new javax.swing.JMenu();
        MenuItemGuardar = new javax.swing.JMenuItem();
        MenuItemAbrir = new javax.swing.JMenuItem();
        MenuItemSalir = new javax.swing.JMenuItem();
        MenuEditar = new javax.swing.JMenu();
        MenuItemLimpiar = new javax.swing.JMenuItem();
        MenuItemSeleccionarColor = new javax.swing.JMenuItem();
        MenuItemGrosorLinea = new javax.swing.JMenuItem();
        MenuHerramientas = new javax.swing.JMenu();
        MenuItemBorrar = new javax.swing.JMenuItem();
        MenuItemDibujoLibre = new javax.swing.JMenuItem();
        MenuItemLinea = new javax.swing.JMenuItem();
        MenuItemCuadrado = new javax.swing.JMenuItem();
        MenuItemCirculo = new javax.swing.JMenuItem();

        jMenuItem1.setText("Herramientas");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MenuArchivo.setText("Archivo");

        MenuItemGuardar.setText("Guardar");
        MenuItemGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemGuardarActionPerformed(evt);
            }
        });
        MenuArchivo.add(MenuItemGuardar);

        MenuItemAbrir.setText("Abrir");
        MenuItemAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemAbrirActionPerformed(evt);
            }
        });
        MenuArchivo.add(MenuItemAbrir);

        MenuItemSalir.setText("Salir");
        MenuItemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemSalirActionPerformed(evt);
            }
        });
        MenuArchivo.add(MenuItemSalir);

        BarraMenu.add(MenuArchivo);

        MenuEditar.setText("Editar");

        MenuItemLimpiar.setText("Limpiar");
        MenuItemLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemLimpiarActionPerformed(evt);
            }
        });
        MenuEditar.add(MenuItemLimpiar);

        MenuItemSeleccionarColor.setText("Seleccionar Color");
        MenuItemSeleccionarColor.setToolTipText("");
        MenuItemSeleccionarColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemSeleccionarColorActionPerformed(evt);
            }
        });
        MenuEditar.add(MenuItemSeleccionarColor);

        MenuItemGrosorLinea.setText("Grosor de Linea");
        MenuItemGrosorLinea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemGrosorLineaActionPerformed(evt);
            }
        });
        MenuEditar.add(MenuItemGrosorLinea);

        BarraMenu.add(MenuEditar);

        MenuHerramientas.setText("Herramientas");

        MenuItemBorrar.setText("Borrar");
        MenuItemBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemBorrarActionPerformed(evt);
            }
        });
        MenuHerramientas.add(MenuItemBorrar);

        MenuItemDibujoLibre.setText("Dibujo Libre");
        MenuItemDibujoLibre.setToolTipText("");
        MenuItemDibujoLibre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemDibujoLibreActionPerformed(evt);
            }
        });
        MenuHerramientas.add(MenuItemDibujoLibre);

        MenuItemLinea.setText("Linea");
        MenuItemLinea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemLineaActionPerformed(evt);
            }
        });
        MenuHerramientas.add(MenuItemLinea);

        MenuItemCuadrado.setText("Cuadrado");
        MenuItemCuadrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemCuadradoActionPerformed(evt);
            }
        });
        MenuHerramientas.add(MenuItemCuadrado);

        MenuItemCirculo.setText("Circulo");
        MenuItemCirculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemCirculoActionPerformed(evt);
            }
        });
        MenuHerramientas.add(MenuItemCirculo);

        BarraMenu.add(MenuHerramientas);

        setJMenuBar(BarraMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 274, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MenuItemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_MenuItemSalirActionPerformed

    private void MenuItemGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemGuardarActionPerformed

        guardar_abrir.guardar(canvas1, canvas1.shapes);

    }//GEN-LAST:event_MenuItemGuardarActionPerformed

    private void MenuItemBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemBorrarActionPerformed
        canvas1.opcion = 1;
        canvas1.color = Color.WHITE;
    }//GEN-LAST:event_MenuItemBorrarActionPerformed

    private void MenuItemDibujoLibreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemDibujoLibreActionPerformed
        canvas1.opcion = 2;
        canvas1.color = Color.black;
    }//GEN-LAST:event_MenuItemDibujoLibreActionPerformed

    private void MenuItemSeleccionarColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemSeleccionarColorActionPerformed
        new InterfazSeleccionarColor(canvas1);
    }//GEN-LAST:event_MenuItemSeleccionarColorActionPerformed

    private void MenuItemGrosorLineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemGrosorLineaActionPerformed
        new InterfazGrosorLinea(canvas1);
    }//GEN-LAST:event_MenuItemGrosorLineaActionPerformed

    private void MenuItemLineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemLineaActionPerformed
        canvas1.opcion = 3;
        canvas1.color = Color.black;
    }//GEN-LAST:event_MenuItemLineaActionPerformed

    private void MenuItemLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemLimpiarActionPerformed
        canvas1.shapes.clear();
        canvas1.repaint();
    }//GEN-LAST:event_MenuItemLimpiarActionPerformed

    private void MenuItemCuadradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemCuadradoActionPerformed
        canvas1.opcion = 4;
        canvas1.color = Color.black;
    }//GEN-LAST:event_MenuItemCuadradoActionPerformed

    private void MenuItemCirculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemCirculoActionPerformed
        canvas1.opcion = 5;
        canvas1.color = Color.black;
    }//GEN-LAST:event_MenuItemCirculoActionPerformed

    private void MenuItemAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemAbrirActionPerformed
        ArrayList<AtributosFormas> formas_resultado = guardar_abrir.abrir();

        if (formas_resultado != null) {
            canvas1.shapes.clear();
            canvas1.shapes = formas_resultado;
            canvas1.repaint();
        }
    }//GEN-LAST:event_MenuItemAbrirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar BarraMenu;
    private javax.swing.JMenu MenuArchivo;
    private javax.swing.JMenu MenuEditar;
    private javax.swing.JMenu MenuHerramientas;
    private javax.swing.JMenuItem MenuItemAbrir;
    private javax.swing.JMenuItem MenuItemBorrar;
    private javax.swing.JMenuItem MenuItemCirculo;
    private javax.swing.JMenuItem MenuItemCuadrado;
    private javax.swing.JMenuItem MenuItemDibujoLibre;
    private javax.swing.JMenuItem MenuItemGrosorLinea;
    private javax.swing.JMenuItem MenuItemGuardar;
    private javax.swing.JMenuItem MenuItemLimpiar;
    private javax.swing.JMenuItem MenuItemLinea;
    private javax.swing.JMenuItem MenuItemSalir;
    private javax.swing.JMenuItem MenuItemSeleccionarColor;
    private javax.swing.JMenuItem jMenuItem1;
    // End of variables declaration//GEN-END:variables
}
